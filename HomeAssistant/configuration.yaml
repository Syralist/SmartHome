homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 53.086612
  longitude: 8.792995
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 11
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Berlin
  # Customization file
  customize: !include customize.yaml

  whitelist_external_dirs:
    - /config/sensor
    - /share/sensor

# Show links to resources in log and frontend
# introduction:

# Enables the frontend
frontend:
  # themes: !include themes.yaml
  themes: !include_dir_merge_named themes/

hacs:
  token: !secret hacs_github
  appdaemon: true
  python_script: true
  theme: true

# Floorplan
# panel_custom:
#   - name: floorplan
#     sidebar_title: Floorplan
#     sidebar_icon: mdi:home
#     url_path: floorplan
#     config: !include floorplan.yaml

# TasmoAdmin
panel_iframe:
  tasmoadmin:
    title: TasmoAdmin
    icon: mdi:lightbulb-on
    url: https://192.168.2.130:9541
  # custom_components:
  #   title: Custom Component Store
  #   icon: mdi:package-variant
  #   url: http://192.168.2.130:8100/

# Enables configuration UI
config:

system_health:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123
  base_url: helmkeaufdemkamp.duckdns.org:8123
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# reduce DB size by configuring the recorder component
recorder:
  purge_keep_days: 1
  purge_interval: 1
  exclude:
    domains:
      - automation
      - weblink
      - updater
    entities:
      - sun.sun
      - sensor.date

logger:
  default: info
  logs:
    pydeconz: debug
    homeassistant.components.deconz: debug
    abfallio: debug

# # InfluxDB
# influxdb:
#   host: a0d7b954-influxdb
#   port: 8086
#   database: homeassistant
#   username: !secret mqtt_user
#   password: !secret mqtt_pass
#   max_retries: 3
#   default_measurement: state

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

alarm_control_panel:
  - platform: manual_mqtt
    state_topic: home/alarm
    command_topic: home/alarm/set

weather:
  - platform: openweathermap
    api_key: !secret openweatherkey

# USV
apcupsd:
  host: a722577e-apcupsd

homematic:
  interfaces:
    rf:
      host: 192.168.2.120
      port: 2001
      resolvenames: json
      username: !secret homematic_user
      password: !secret homematic_pass
    ip:
      host: 192.168.2.120
      port: 2010
      resolvenames: json
      username: !secret homematic_user
      password: !secret homematic_pass
  hosts:
    ccu2:
      host: 192.168.2.120
      username: !secret homematic_user
      password: !secret homematic_pass


tuya:
  username: !secret tuya_user
  password: !secret tuya_pass
  country_code: 49

android_ip_webcam:
  - host: 192.168.2.127
    sensors:
      - battery_level
      - battery_temp
      - light
    switches:
      - night_vision
      - torch

# Weather prediction
sensor:
  - platform: abfallio
    resources:
      - gelbersack
      - hausmuell
      - papiertonne
  - platform: yr
    name: Wetter Heute
    monitored_conditions:
      - temperature
      - symbol
      - precipitation
      - windSpeed
      - pressure
      - windDirection
      - humidity
      - fog
      - cloudiness
      - lowClouds
      - mediumClouds
      - highClouds
      - dewpointTemperature
  - platform: yr
    name: Wetter Morgen
    forecast: 24
    monitored_conditions:
      - temperature
      - symbol
      - precipitation
      - windSpeed
      - pressure
      - windDirection
      - humidity
      - fog
      - cloudiness
      - lowClouds
      - mediumClouds
      - highClouds
      - dewpointTemperature
  - platform: mqtt
    name: "Wohnzimmer Temperatur"
    unit_of_measurement: "Â°C"
    state_topic: "home/wohnzimmer/lixie/temp"
    value_template: '{{ value_json.temp }}'
  - platform: mqtt
    name: "Wohnzimmer Luftdruck"
    unit_of_measurement: "hPa"
    icon: mdi:gauge
    state_topic: "home/wohnzimmer/lixie/temp"
    value_template: '{{ value_json.press }}'
  - platform: mqtt
    name: "Wohnzimmer Luftfeuchtigkeit"
    unit_of_measurement: "%"
    icon: mdi:water-percent
    state_topic: "home/wohnzimmer/lixie/temp"
    value_template: '{{ value_json.humid }}'
  - platform: apcupsd
    resources:
      - bcharge
      - linev
      - loadpct
      - nominv
      - nompower
      - numxfers
      - outputv
      - status
      - timeleft
      - tonbatt
  - platform: mqtt
    name: "Waschmaschine Energie"
    state_topic: "home/keller/waschmaschine/tele/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Today"] }}'
    unit_of_measurement: "kWh"
    icon: mdi:gauge
  - platform: mqtt
    name: "Waschmaschine Leistung"
    state_topic: "home/keller/waschmaschine/tele/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    unit_of_measurement: "W"
    icon: mdi:gauge-full
  - platform: mqtt
    name: "Waschmaschine Spannung"
    state_topic: "home/keller/waschmaschine/tele/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Voltage"] }}'
    unit_of_measurement: "V"
    icon: mdi:gauge-low
  - platform: mqtt
    name: "Waschmaschine Strom"
    state_topic: "home/keller/waschmaschine/tele/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Current"] }}'
    unit_of_measurement: "A"
    icon: mdi:gauge-empty
  - platform: mqtt
    name: "Rollladen Thomas Temperatur"
    state_topic: "shellies/shellyswitch25-E62E12/temperature"
    unit_of_measurement: "Â°C"
  - platform: systemmonitor
    resources:
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
  - platform: fritzbox_netmonitor
  - platform: template
    sensors:
      battery_fenster_thomas:
        friendly_name: 'Fenster Thomas'
        value_template: "{{ states.binary_sensor.fenster_thomas.attributes.battery_level|default(-1)|int if states.binary_sensor.fenster_thomas is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.fenster_thomas.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.fenster_thomas.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
      battery_fenster_wohnzimmer:
        friendly_name: 'Fenster Wohnzimmer'
        value_template: "{{ states.binary_sensor.fenster_wohnzimmer.attributes.battery_level|default(-1)|int if states.binary_sensor.fenster_wohnzimmer is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.fenster_wohnzimmer.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.fenster_wohnzimmer.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
      battery_fenster_kueche:
        friendly_name: 'Fenster KÃ¼che'
        value_template: "{{ states.binary_sensor.fenster_kueche.attributes.battery_level|default(-1)|int if states.binary_sensor.fenster_kueche is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.fenster_kueche.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.fenster_kueche.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
      battery_haustuer:
        friendly_name: 'HaustÃ¼r'
        value_template: "{{ states.binary_sensor.haustur.attributes.battery_level|default(-1)|int if states.binary_sensor.fenster_kueche is not none }}"
        unit_of_measurement: '%'
        icon_template: '{% if states.binary_sensor.haustur.attributes.battery_level == 100 %}
                           mdi:battery
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 90 %}
                           mdi:battery-90
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 80 %}
                           mdi:battery-80
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 70 %}
                           mdi:battery-70
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 60 %}
                           mdi:battery-60
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 50 %}
                           mdi:battery-50
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 40 %}
                           mdi:battery-40
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 30 %}
                           mdi:battery-30
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 20 %}
                           mdi:battery-20
                        {% elif states.binary_sensor.haustur.attributes.battery_level >= 10 %}
                           mdi:battery-10
                        {% else %}
                           battery-outline
                        {% endif %}'
      battery_thermo_thomas:
        friendly_name: 'Thermostat Thomas'
        value_template: "{{ states.climate['0012999395e750'].attributes.battery if states.climate['0012999395e750'] is not none }}"
        icon_template: "{% if is_state_attr('climate.0012999395e750', 'battery', 'High') %}
                           mdi:battery
                        {% else %}
                           battery-outline
                        {% endif %}"
      battery_fenster_steffi:
        friendly_name: 'Fenster Steffi'
        value_template: "{{ states.binary_sensor['fenster_steffi'].attributes.battery if states.binary_sensor['fenster_steffi'] is not none }}"
        icon_template: "{% if is_state_attr('binary_sensor.fenster_steffi', 'battery', 'High') %}
                           mdi:battery
                        {% else %}
                           battery-outline
                        {% endif %}"
      battery_keller_wasser:
        friendly_name: 'Keller Wasser'
        value_template: "{{ states.binary_sensor['001898a99f52dc_alarmstate'].attributes.battery if states.binary_sensor['001898a99f52dc_alarmstate'] is not none }}"
        icon_template: "{% if is_state_attr('binary_sensor.001898a99f52dc_alarmstate', 'battery', 'High') %}
                           mdi:battery
                        {% else %}
                           battery-outline
                        {% endif %}"
      fritz_uptime:
        friendly_name: "Fritzbox Uptime"
        icon_template: mdi:clock-outline
        value_template: "{% set uptime = states.sensor.fritz_netmonitor.attributes.uptime | int %}
                          {% set minutes = ((uptime % 3600) / 60) | int %} 
                          {% set hours = ((uptime % 86400) / 3600) | int %}
                          {% set days = (uptime / 86400) | int %}
                          {%- if uptime < 1 -%}
                            Weniger als eine Minute
                          {%- else -%}
                            {%- if days > 0 -%}
                              {%- if days == 1 -%}
                                1 Tag
                              {%- else -%}
                                {{ days }} Tage
                              {%- endif -%}
                            {%- endif -%}
                            {%- if hours > 0 -%}
                              {%- if days > 0 -%}
                                {{ ', ' }}
                              {%- endif -%}
                              {%- if hours == 1 -%}
                                1 Stunde
                              {%- else -%}
                                {{ hours }} Stunden
                              {%- endif -%}
                            {%- endif -%}
                            {%- if minutes > 0 -%}
                              {%- if days > 0 or hours > 0 -%}
                                {{ ', ' }}
                              {%- endif -%}
                              {%- if minutes == 1 -%}
                                1 Minute
                              {%- else -%}
                                {{ minutes }} Minuten
                              {%- endif -%}
                            {%- endif -%}
                          {%- endif -%}"
      fritz_download_rate:
        friendly_name: "Fritzbox Downstream"
        icon_template: mdi:download-network-outline
        unit_of_measurement: 'Mbit/s'
        value_template: "{{ states.sensor.fritz_netmonitor.attributes.transmission_rate_down/125000 }}"
      fritz_upload_rate:
        friendly_name: "Fritzbox Upstream"
        icon_template: mdi:upload-network-outline
        unit_of_measurement: 'bytes/s'
        value_template: "{{ states.sensor.fritz_netmonitor.attributes.transmission_rate_up }}"
  - platform: vicare
    username: !secret vicare_user
    password: !secret vicare_pass
  - platform: file
    name: MuellabfuhrAbgeholt
    file_path: /share/sensor/MuellabfuhrZaehler.json
    value_template: '{{ value_json.abgeholt }}'
  - platform: file
    name: MuellabfuhrSparziel
    file_path: /share/sensor/MuellabfuhrZaehler.json
    value_template: '{{ value_json.sparziel }}'

climate:
  - platform: vicare
    username: !secret vicare_user
    password: !secret vicare_pass

binary_sensor:
  - platform: template
    sensors:
      waschmaschine:
        friendly_name: "Waschmaschine lÃ¤uft"
        value_template: "{{ states('sensor.waschmaschine_leistung')|float > 3.0 }}"
        delay_off:
          minutes: 3
        delay_on:
          minutes: 3
  - platform: iss

input_boolean:
  wochenende:
    name: Wochenende

input_number:
  muellabfuhr_slider:
    name: MÃ¼llabfuhr abgeholt
    min: 0
    max: 27
    step: 1

switch:
  - platform: mqtt
    name: "Sonoff Rechner"
    state_topic: "home/thomaszimmer/sonoff/stat/RESULT" #"stat/sonoff/POWER"
    value_template: '{{ value_json["POWER"] }}'
    command_topic: "home/thomaszimmer/sonoff/cmnd/POWER" #"cmnd/sonoff/POWER"
    availability_topic: "home/thomaszimmer/sonoff/tele/LWT" #"tele/sonoff/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: true
  - platform: mqtt
    name: "Sonoff Keller"
    state_topic: "home/keller/sonoff/stat/RESULT" #"stat/sonoff/POWER"
    value_template: '{{ value_json["POWER"] }}'
    command_topic: "home/keller/sonoff/cmnd/POWER" #"cmnd/sonoff/POWER"
    availability_topic: "home/keller/sonoff/tele/LWT" #"tele/sonoff/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: true
  - platform: wake_on_lan
    mac_address: "00-11-32-37-21-3D"
    name: "Synology NAS"
    host: "192.168.2.151"
    turn_off:
      service: shell_command.turn_off_nas
      data:
        secret_url: !secret syno_cmd_url
  - platform: wake_on_lan
    mac_address: "BC-5F-F4-59-14-77"
    name: "Steffi Desktop"
    host: "192.168.2.99"
    turn_off:
      service: shell_command.hibernate_steffidesktop
      data:
        password: !secret http_password
  - platform: mqtt
    name: "Sonoff Waschmaschine"
    state_topic: "home/keller/waschmaschine/stat/RESULT" #"stat/sonoff/POWER"
    value_template: '{{ value_json["POWER"] }}'
    command_topic: "home/keller/waschmaschine/cmnd/POWER" #"cmnd/sonoff/POWER"
    availability_topic: "home/keller/waschmaschine/tele/LWT" #"tele/sonoff/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: true

light:
  # - platform: mqtt
  #   schema: json
  #   name: "McLightingThomas"
  #   state_topic: "home/McLightingThomas_ha/state/out"
  #   command_topic: "home/McLightingThomas_ha/state/in"
  #   effect: true
  #   effect_list:
  #   ######
  #     - "Static"
  #     - "Blink"
  #     - "Breath"
  #     - "Color Wipe"
  #     - "Color Wipe Inverse"
  #     - "Color Wipe Reverse"
  #     - "Color Wipe Reverse Inverse"
  #     - "Color Wipe Random"
  #     - "Random Color"
  #     - "Single Dynamic"
  #     - "Multi Dynamic"
  #     - "Rainbow"
  #     - "Rainbow Cycle"
  #     - "Scan"
  #     - "Dual Scan"
  #     - "Fade"
  #     - "Theater Chase"
  #     - "Theater Chase Rainbow"
  #     - "Running Lights"
  #     - "Twinkle"
  #     - "Twinkle Random"
  #     - "Twinkle Fade"
  #     - "Twinkle Fade Random"
  #     - "Sparkle"
  #     - "Flash Sparkle"
  #     - "Hyper Sparkle"
  #     - "Strobe"
  #     - "Strobe Rainbow"
  #     - "Multi Strobe"
  #     - "Blink Rainbow"
  #     - "Chase White"
  #     - "Chase Color"
  #     - "Chase Random"
  #     - "Chase Rainbow"
  #     - "Chase Flash"
  #     - "Chase Flash Random"
  #     - "Chase Rainbow White"
  #     - "Chase Blackout"
  #     - "Chase Blackout Rainbow"
  #     - "Color Sweep Random"
  #     - "Running Color"
  #     - "Running Red Blue"
  #     - "Running Random"
  #     - "Larson Scanner"
  #     - "Comet"
  #     - "Fireworks"
  #     - "Fireworks Random"
  #     - "Merry Christmas"
  #     - "Fire Flicker"
  #     - "Fire Flicker (soft)"
  #     - "Fire Flicker (intense)"
  #     - "Circus Combustus"
  #     - "Halloween"
  #     - "Bicolor Chase"
  #     - "Tricolor Chase"
  #     - "ICU"
  #   brightness: true
  #   color_temp: true
  #   rgb: true
  #   optimistic: false
  #   qos: 0
  #   retain: true
  - platform: mqtt
    schema: json
    name: "LixieClock"
    state_topic: "home/wohnzimmer/lixie"
    command_topic: "home/wohnzimmer/lixie/cmd"
    brightness: true
    rgb: true
    optimistic: false
    qos: 0
    retain: true

cover:
  - platform: mqtt
    name: "Rollladen Thomas"
    command_topic: "shellies/shellyswitch25-E62E12/roller/0/command"
    position_topic: "shellies/shellyswitch25-E62E12/roller/0/pos"
    set_position_topic: "shellies/shellyswitch25-E62E12/roller/0/command/pos"
    availability_topic: "shellies/shellyswitch25-E62E12/online"
    payload_available: "true"
    payload_not_available: "false"
    qos: 0
    retain: false
    payload_open: "open"
    payload_close: "close"
    payload_stop: "stop"
    position_open: 100
    position_closed: 0
    # value_template: '{{ value.x }}'
    device_class: shutter

shell_command:
  turn_off_nas: 'curl {{ secret_url }}'
  shutdown_steffidesktop: 'curl -u User:{{password}} -k http://192.168.2.99:8000/?action=System.Shutdown'
  restart_steffidesktop: 'curl -u User:{{password}} -k http://192.168.2.99:8000/?action=System.Restart'
  hibernate_steffidesktop: 'curl -u User:{{password}} -k http://192.168.2.99:8000/?action=System.Hibernate'

eufy:
  username: !secret eufy_user
  password: !secret eufy_pass

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# Media Players
media_player:
  - platform: braviatv
    host: 192.168.2.50
    name: Fernseher

alexa_media:
  accounts:
    - email: !secret amazon_user
      password: !secret amazon_password
      url: amazon.de

# # Cloud
# cloud:
#   alexa:
#     filter:
#       include_domains:
#         - switch
#         - scene
#         - cover
#         - light
#         - media_player

# Google
google:
  client_id: !secret google_id
  client_secret: !secret google_secret

google_assistant:
  project_id: !secret google-assistant-id
  api_key: !secret google-assistant-key
  exposed_domains:
    - switch
    - light
    - cover

# mqtt
mqtt:
  discovery: true
  broker: core-mosquitto
  username: !secret mqtt_user
  password: !secret mqtt_pass

duckdns:
  domain: helmkeaufdemkamp
  access_token: !secret ducktoken

device_tracker:
  - platform: nmap_tracker
    hosts: 
      # - 192.168.2.0/24
      - 192.168.2.98
      - 192.168.2.97
    home_interval: 10
    # exclude:
    #   - 192.168.2.151
    #   - 192.168.2.130
    #   - 192.168.2.99
    #   - 192.168.2.50

person:

zone:
  - name: Arbeit
    latitude: 53.1363124
    longitude:  8.6853710
    radius: 1900
    icon: mdi:office-building

# telegram_bot:
#   - platform: polling
#     api_key: !secret telegram_apikey
#     allowed_chat_ids:
#       - !secret telegramm_group_id
#       - !secret telegramm_thomas_id
#       - !secret telegramm_steffi_id

notify:
  # - name: JarvisNotifier
  #   platform: telegram
  #   chat_id: !secret telegramm_group_id
  - name: MuellabfuhrZaehler
    platform: file
    filename: /share/sensor/MuellabfuhrZaehler.json

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
